blueprint:
  name: Flexible Safe Orphaned Entities Cleanup
  description: "Automatisierte Bereinigung verwaister Entitäten mit konfigurierbarer Karenzzeit und Benachrichtigungen."
  domain: automation
  source_url: https://gist.github.com/your-username/your-gist-id
  input:
    weekdays:
      name: Wochentage
      description: Die Wochentage, an denen die Automatisierung ausgeführt werden soll.
      default: ["sat"]
      selector:
        select:
          multiple: true
          options:
            - label: Montag
              value: mon
            - label: Dienstag
              value: tue
            - label: Mittwoch
              value: wed
            - label: Donnerstag
              value: thu
            - label: Freitag
              value: fri
            - label: Samstag
              value: sat
            - label: Sonntag
              value: sun
    time_of_day:
      name: Startzeit
      description: Die Uhrzeit, zu der die Automatisierung ausgeführt werden soll (HH:MM:SS).
      default: "03:00:00"
      selector:
        time:
    grace_period_hours:
      name: Karenzzeit (in Stunden)
      description: Die Dauer, die eine Entität inaktiv sein muss, bevor sie gelöscht wird.
      default: 78
      selector:
        number:
          min: 1
          max: 168
          mode: box
          unit_of_measurement: Stunden
    notification_device:
      name: Benachrichtigungsdienst(e)
      description: Der/die Dienst(e), der/die die Benachrichtigungen senden soll(en). Mehrere können ausgewählt werden.
      selector:
        entity:
          domain: notify
          multiple: true
    history_helper:
      name: Historien-Helfer
      description: Der Textfeld-Helfer, der die Historie der verwaisten Entitäten speichert (z.B. input_text.orphaned_entities_history).
      selector:
        entity:
          domain: input_text

trigger:
  - platform: time
    at: !input time_of_day
    weekday: !input weekdays
condition: []
action:
  # 1. Schritt: Alle verwaisten Entitäten abrufen
  - alias: "Aktuelle verwaiste Entitäten abrufen"
    service: homeassistant.list_orphaned_database_entities
    response_variable: current_orphaned
  
  # 2. Schritt: Liste der Entitäten filtern, die länger als die Karenzzeit inaktiv waren
  - alias: "Liste der länger inaktiven Entitäten erstellen"
    variables:
      inactive_orphaned: |
        {% set result = namespace(list=[]) %}
        {% set grace_period_seconds = (states('input_number.' ~ (history_helper.split('.')[1]) ~ '_grace_period') | int) * 3600 %}
        {% for entity_id in current_orphaned.entities %}
          {% if states(entity_id) == 'unavailable' and as_timestamp(now()) - as_timestamp(states[entity_id].last_changed) > (input_number.{{ grace_period_hours }} * 3600) %}
            {% set result.list = result.list + [entity_id] %}
          {% endif %}
        {% endfor %}
        {{ result.list }}
  
  # 3. Schritt: Entitäten finden, die gelöscht werden sollen (Schnittmenge der Listen)
  - variables:
      last_week_orphaned: "{{ states(history_helper).split(',') if states(history_helper) | length > 0 else [] }}"
      entities_to_delete: "{{ inactive_orphaned | select('in', last_week_orphaned) | list }}"
        
  # 4. Schritt: Lösch- und Benachrichtigungslogik ausführen
  - alias: "Löschen und Benachrichtigen"
    if: "{{ entities_to_delete | count > 0 }}"
    then:
      - alias: "Benachrichtigung mit Liste senden"
        service: !input notification_device
        data:
          title: "Home Assistant Cleanup"
          message: |
            Die folgenden {{ entities_to_delete | count }} Entitäten, die alle Kriterien erfüllen, werden gelöscht:
            {{ entities_to_delete | join('\n') }}
            
      - alias: "Verwaiste Entitäten löschen"
        service: recorder.purge_entities
        data:
          keep_days: 0
          entity_id: "{{ entities_to_delete }}"
          
      - alias: "Abschlussbenachrichtigung senden"
        service: !input notification_device
        data:
          title: "Home Assistant Cleanup abgeschlossen"
          message: "Es wurden {{ entities_to_delete | count }} Entitäten gelöscht."
          
    else:
      - alias: "Keine Entitäten zu löschen"
        service: !input notification_device
        data:
          title: "Home Assistant Cleanup"
          message: "Keine Entitäten gefunden, die die Kriterien für eine Löschung erfüllen."
  
  # 5. Schritt: Speichere die aktuelle Liste für die nächste Prüfung
  - service: input_text.set_value
    data:
      value: "{{ current_orphaned.entities | join(',') }}"
    target:
      entity_id: !input history_helper
